plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'maven-publish'
    id 'kotlin-kapt'
}
task generateSourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier 'sources'
}

android {

    compileSdk Android.compileSdkVersion

    defaultConfig {
        minSdk Android.minSdkVersion
        targetSdk Android.targetSdkVersion
        versionCode Android.versionCode
        versionName Android.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "proguard-rules.pro"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    kotlinOptions {
        useIR = true
        jvmTarget = JavaVersion.VERSION_11
        freeCompilerArgs += ["-Xskip-prerelease-check"]
    }

    afterEvaluate {
        publishing {
            // 当前版本依赖库版本号，这个jitpack不会使用到，只是我们开发者自己查看
            // def versionName = "1.0"
            publications {
                // Creates a Maven publication called "release".
                release(MavenPublication) {
                    // Applies the component for the release build variant.
                    from components.release // 表示发布 release（jitpack 都不会使用到）

                    // You can then customize attributes of the publication as shown below.
                    groupId = 'com.github.R-Gang' // 这个是依赖库的组 id
                    artifactId = 'Okhttp-Utils' // 依赖库的名称（jitpack 都不会使用到）
                    version = Android.versionName
                }
            }
        }
    }

    lintOptions {
        abortOnError false
    }

    buildFeatures {
        dataBinding = true
        // for view binding :
        // viewBinding = true
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation Support.constraintlayout
    implementation Support.appcompat
    implementation Support.kotlin_stdlib_jdk8

    implementation Dependencies.okhttputils
    implementation Dependencies.okhttp_logging_interceptor
    implementation Dependencies.gson
    implementation Dependencies.update_app

    implementation Dependencies.logger
    implementation Dependencies.loadingDialog

    // 常用基类封装
    implementation Dependencies.android_common

}

// 导出jar包
task makeJar(type: Copy) {
    //删除存在的
    delete 'build/libs/rgang-okhttp-utils.jar'
    //设置拷贝的文件
    from('build/intermediates/aar_main_jar/release/')
    //打进jar包后的文件目录
    into('build/libs/')
    //将classes.jar放入build/libs/目录下
    //include ,exclude参数来设置过滤
    //（我们只关心classes.jar这个文件）
    include('classes.jar')
    //重命名
    rename('classes.jar', 'rgang-okhttp-utils.jar')
}
makeJar.dependsOn(build)